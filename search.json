[{"path":"https://joeystanley.github.io/joeyr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Joseph . Stanley. Author, maintainer.","code":""},{"path":"https://joeystanley.github.io/joeyr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Stanley J (2025). joeyr: Functions Vowel Data. R package version 0.11, https://joeystanley.github.io/joeyr/. Stanley, Joseph . “Absence Religiolect among Latter-Day Saints Southwest Washington.” Speech Western States: Volume 3, Understudied Varieties, Valerie Fridland, Alicia Beckford Wassink, Lauren Hall-Lew, Tyler Kendall, 95–122. Publication American Dialect Society 105. Durham, NC: Duke University Press, 2020. https://doi.org/10.1215/00031283-8820642.","code":"@Manual{,   title = {joeyr: Functions for Vowel Data},   author = {Joseph A. Stanley},   year = {2025},   note = {R package version 0.11},   url = {https://joeystanley.github.io/joeyr/}, } @InCollection{,   author = {Joseph A. Stanley},   title = {The Absence of a Religiolect among Latter-day Saints in Southwest Washington},   year = {2020},   pages = {95-122},   editor = {Valerie Fridland and Alicia Beckford Wassink and Lauren Hall-Lew and Tyler Kendall},   booktitle = {Speech in the Western States: Volume 3, Understudied Varieties},   series = {Publication of the American Dialect Society},   address = {Durham, NC},   publisher = {Duke University Press},   note = {https://doi.org/10.1215/00031283-8820642}, }"},{"path":"https://joeystanley.github.io/joeyr/index.html","id":"joeyr","dir":"","previous_headings":"","what":"joeyr","title":"joeyr","text":"hodge-podge useful functions.","code":""},{"path":"https://joeystanley.github.io/joeyr/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"joeyr","text":"essentially sandbox R Package. hodge-podge functions ’ve used past several years. work sociophonetic data, find running sorts procedures , often decide write generalized function take care stuff one line within tidyverse pipeline. functions joeyr can grouped five different categories: outlier detecters, sociophonetics functions, ggplot2 themes, “grapes”, helpful functions. README briefly explains . functions ’ve generalized something others may find useful. Others specific code workflow ’m sure ’ll useful . functions documented well lots . questions, feel free contact joey_stanley@byu.edu Bluesky @joeystanley.com.","code":""},{"path":"https://joeystanley.github.io/joeyr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"joeyr","text":"package can downloaded computer downloading Github. can load like package.","code":"#install.packages(\"devtools\") # <- if not already installed devtools::install_github(\"JoeyStanley/joeyr\") library(joeyr)"},{"path":"https://joeystanley.github.io/joeyr/index.html","id":"group-1-the-filter","dir":"","previous_headings":"","what":"Group 1: The Filter","title":"joeyr","text":"main function, reason created package first place, find_outliers(). implements version Mahalanobis Distance, except iteratively. finding distances point, marks furthest token outlier, recalculates distance based remaining points. continues one---time procedure proportion data (’ve specified) removed. details, see ?find_outliers. future ’ll write vignette, blog post, (perhaps day) article . now, look help page email .","code":""},{"path":"https://joeystanley.github.io/joeyr/index.html","id":"group-2-sociophonetics-functions","dir":"","previous_headings":"","what":"Group 2: Sociophonetics functions","title":"joeyr","text":"functions joeyr useful sociophonetic analysis. first set includes essentially mathematical functions crunch numbers. eucl_dist() calculates Euclidean Distance, given pair x y (, commonly, F1 F2) coordinates. get_centroids() little shortcut summarizes data quickly helpful plotting medians within ellipses ggplot2. pillai() calculates Pillai score. ’s complicated process general, function simplifies quite bit doesn’t interrupt workflow. tidy_mahalanobis() probably favorite. ’s implementation mahalanobis() function, calculates Mahalanobis distance, ’s meant work within tidyverse pipeline commands. Like pillai() function, ’s designed can get values want without interrupting flow. lbms_index() allows quickly calculate Low-Back-Merger Shift Index data (see Becker 2019; Boberg 2019). two functions changing labels phonemes allophones. switch_transcriptions() (shortcuts including, arpa_to_wells()), quickly converts ARPABET labels Wells (Wells-inspired) keywords. code_allophones() one-liner adds contextual allophones (“BAN”, “BAG”, “SPOOL”, “TOOT”, etc.) vowel data. Finally, one purely informational function, OoO() serves reminder (mostly ) recommended Order Operations . three normalization procedures package, June 18, 2025 release Fruehwald’s tidynorm package, ’m recommending people switch instead.","code":""},{"path":"https://joeystanley.github.io/joeyr/index.html","id":"group-3-ggplot2-themes","dir":"","previous_headings":"","what":"Group 3: ggplot2 themes","title":"joeyr","text":"currently documented. main one theme_joey() produce plots using flavor theme_bw(). variants well. helpful function joey_arrow() just shortcut type arrow like draw lines plot. ’ll admit don’t really use anymore arrow.","code":""},{"path":"https://joeystanley.github.io/joeyr/index.html","id":"group-4-the-grapes","dir":"","previous_headings":"","what":"Group 4: The grapes","title":"joeyr","text":"“Grapes” refer type R functions flanked either side %, like %%. ones came writing dissertation (rather, code used analze data dissertation) super helpful project. %ni% (“”“) super handy opposite %%. don’t use much anymore ’ve figured use ! properly, still love . %wi% (“within”) one wrote see whether number within range. think tidyverse %within% somewhere suite packages, wrote knew . Plus, ’s little shorter. %expanded_by% takes number range expands range much (applied sides). c(1, 3) %expanded_by% 3 produces c(-2, 6). helpul automating plots dissertation.","code":""},{"path":"https://joeystanley.github.io/joeyr/index.html","id":"group-5-other-helpful-functions","dir":"","previous_headings":"","what":"Group 5: Other helpful functions","title":"joeyr","text":"writing dissertation, found sort pipeline just made couple little shortcut functions save typing. color_gradienter() needed Shiny app, Gazetteer Southern Vowels. needed way take two arbitrary colors produce arbitrary number colors fixed intervals . helpful plots: want use favorite color green favorite color blue, also get three colors continuous scale? color_gradienter() can . don’t know everything color encoded, seems work well enough , though may weird bugs. ucfirst() function copied Perl code. just capitalizes first character string. Unlike functions sophisticaed transform text title case, sometimes just need first character , rather first character word.","code":""},{"path":"https://joeystanley.github.io/joeyr/index.html","id":"depreciated-functions","dir":"","previous_headings":"","what":"Depreciated functions","title":"joeyr","text":"Previous versions joeyr couple tools, recent versions tidyr dplyr rendered unnecessary. following longer part joeyr, though can find code GitHub R_depreciated folder. spread_n() perhaps favorite function. need using (old) tidyr::spread() multiple value columns reshaping formant data. went RStudio forums someone wrote slick little function dubbed spread_n(). (Kieran Healey saw post wrote blog post !). function since rendered obsolete new tidyr::pivot_wider() (Kieran Healey wrote ), don’t use spread_n() anymore. Perhaps ’ll eventually removed package. can’t help think asking question role pivot_wider() function. move_x_after_y() move_x_before_y() helpful want take column ’ve just created move existing column. ’s little buggy work columns edges dataframe, worked well dissertation code. Note dplyr 1.0.0 released, functions phased since new dplyr::relocate function intended .","code":""},{"path":"https://joeystanley.github.io/joeyr/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"joeyr","text":"use package, appreciate citation. can cite : Stanley, Joseph . joeyr: Functions Vowel Data (R package version ###), 2021. https://joeystanley.github.io/joeyr/ Specifically, use find_outliers() function, can refer something like “Modified Mahalanobis Distance method implemented Stanley (2020).” Stanley, Joseph . “Absence Religiolect among Latter-Day Saints Southwest Washington.” Speech Western States: Volume 3, Understudied Varieties, Valerie Fridland, Alicia Beckford Wassink, Lauren Hall-Lew, Tyler Kendall, 95–122. Publication American Dialect Society 105. Durham, NC: Duke University Press, 2020. https://doi.org/10.1215/00031283-8820642.","code":""},{"path":"https://joeystanley.github.io/joeyr/index.html","id":"conclusion","dir":"","previous_headings":"","what":"Conclusion","title":"joeyr","text":"’s joeyr. hope find useful!","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/OoO.html","id":null,"dir":"Reference","previous_headings":"","what":"Order of Operations Reminder — OoO","title":"Order of Operations Reminder — OoO","text":"function serves reminder order operations according 2022 paper.","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/OoO.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Order of Operations Reminder — OoO","text":"","code":"OoO()"},{"path":"https://joeystanley.github.io/joeyr/reference/OoO.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Order of Operations Reminder — OoO","text":"run function, see following string: Stanley (2022) recommends following order operations: 1. Classify allophones. (Note: can `joeyr::code_allophones()`.) 2. Remove outliers. (Note: can `joeyr::find_outliers()`.) 3. Normalize. (Note: can tidynorm package.) 4. Remove good otherwise unwanted data like allophones, stopwords, trajectories, unstressed vowels.","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/OoO.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Order of Operations Reminder — OoO","text":"See Joseph . Stanley (2022). “Order Operations Sociophonetic Analysis,” University Pennsylvania Working Papers Linguistics: Vol. 28: Iss. 2, Article 17. Available : https://repository.upenn.edu/pwpl/vol28/iss2/17. Joseph . Stanley (2022). “Interpreting Order Operations Sociophonetic Analysis.” Linguistics Vanguard 8(1). 279–289. DOI 10.1515/lingvan-2022-0065.","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/code_allophones.html","id":null,"dir":"Reference","previous_headings":"","what":"Code allophones — code_allophones","title":"Code allophones — code_allophones","text":"function classify vowel data contextual allophones.","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/code_allophones.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Code allophones — code_allophones","text":"","code":"code_allophones(   .df,   .old_col,   .new_cols = c(\"allophone\", \"allophone_environment\"),   .pre_seg,   .fol_seg,   .coronals = c(\"T\", \"D\", \"S\", \"Z\", \"SH\", \"ZH\", \"JH\", \"N\"),   .voiceless = c(\"P\", \"T\", \"K\", \"CH\", \"F\", \"TH\", \"S\", \"SH\") )"},{"path":"https://joeystanley.github.io/joeyr/reference/code_allophones.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Code allophones — code_allophones","text":".df dataset containing vowel data. .old_col unquoted name column containing vowel labels. Often called \"vowel\" \"phoneme\" many datasets. Note function assumes Wells lexical sets (FLEECE, TRAP, etc.) rather ARPABET (IY, AE, etc.) IPA (, æ, etc.). vowels already coded using Wells' labels can quickly switch_transcriptions one shortcuts like arpa_to_wells .new_cols vector two strings containing names columns like use. default c(\"allophone\", \"allophone_environment\"). first name becomes name column containing new allophone labels. second column becomes name column describing labels. .pre_seg unquoted name column contains labels previous segement. DARLA-generated spreadsheets, `pre_seg` FastTrack-generated spreadsheets, `previous_sound`. Assumes ARPABET labels. .fol_seg unquoted name column contains labels following segement. DARLA-generated spreadsheets, `fol_seg` FastTrack-generated spreadsheets, `next_sound`. Assumes ARPABET labels. .coronals vector strings containing ARPABET labels coronal consonants. default, c(\"T\", \"D\", \"S\", \"Z\", \"SH\", \"ZH\", \"JH\", \"N\"). used create `TOOT` allophone `GOOSE`. .voiceless vector strings containing ARPABET labels voiceless consonants. default, c(\"P\", \"T\", \"K\", \"CH\", \"F\", \"TH\", \"S\", \"SH\"). used create `PRICE` allophone `PRIZE`.","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/code_allophones.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Code allophones — code_allophones","text":"dataframe two additional columns. One column contains labels allophones contains category labels allophones' contexts. second column can useful quickly excluding certain allophones like prelaterals prerhotics coloring families allophones visualizations (turning prelateral allophones gray). two new columns positioned immediately original vowel column indicated .old_col,","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/code_allophones.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Code allophones — code_allophones","text":"list contextual allophones created. Note largely follow advice call elsewhere allophones, call prelateral allophones, allophones. Obviously, list pretty subjective largely based research needed, may work completely research. Please contact joey_stanley@byu.edu want see allophone get added spot error coding. FLEECE becomes ZEAL laterals BEET elsewhere KIT becomes GUILT laterals NEAR rhotics BIG G BIN M N BING NG BIT elsewhere FACE becomes FLAIL laterals VAGUE G BAIT elsewhere DRESS becomes SHELF laterals SQUARE rhotics BEG G BEN M N BENG NG BET elsewhere TRAP becomes TALC laterals BAG G BAN M N BANG NG BAT elsewhere LOT becomes GOLF laterals START rhotics BOT elsewhere THOUGHT becomes FAULT laterals FORCE befpre rhotics BOUGHT elsewhere STRUT becomes MULCH laterals elsewhere GOAT becomes JOLT laterals BOAT elsewhere FOOT becomes WOLF laterals CURE rhotics PUT elsewhere GOOSE becomes MULE Y SPOOL laterals CURE rhotics TOOT coronals BOOT elsewhere PRICE becomes PRICE voiceless segments PRIZE elsewhere Unfortunately, straightforward customize list can always copy source code modify list . Alternatively, can use forcats::fct_collapse() collapse distinctions need. See example code . can also course create allophones desired. Note allophones depend environmental information like syllable structure morpheme/word boundaries, may entirely lexical (FORCE vs. NORTH). may complicated ARPABET can code (MARY, MERRY, MARRY) just inconsistently coded. sake simplicity, allophones included function. environments therefore following \"prelateral\" includes ZEAL, GUILT, FLAIL, SHELF, TALC, GOLF, FAULT, MULCH, JOLT, WOLF, SPOOL, CHILD, PROWL \"prerhotic\" includes NEAR, SQUARE, START, FORCE, CURE, PRIOR \"prevelar\" includes BIG, VAGUE, BEG, BAG, \"prenasal\" includes BIN, BEN, BAN \"prevelarnasal\" includes BING, BENG, BANG \"prevoiceless\" includes BITE \"post-Y\" includes MULE \"postcoronal\" includes TOOT \"elsewhere\" includes BEET, BIT, BAIT, BET, BAT, BOT, BOUGHT, , BOAT, PUT, BOOT, BIDE, BOUT","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/code_allophones.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Code allophones — code_allophones","text":"","code":"suppressPackageStartupMessages(library(tidyverse)) #> Error in library(tidyverse): there is no package called ‘tidyverse’  # Get some sample DARLA data to play with darla <- joeysvowels::darla %>%   select(word, vowel, pre_seg, fol_seg) %>%   mutate(phoneme = joeyr:::arpa_to_wells(vowel), .after = vowel) #> Error in joeysvowels::darla %>% select(word, vowel, pre_seg, fol_seg) %>%     mutate(phoneme = joeyr:::arpa_to_wells(vowel), .after = vowel): could not find function \"%>%\"  # Basic usage darla %>%   code_allophones(.old_col = phoneme, .fol_seg = fol_seg, .pre_seg = pre_seg) %>%   slice_sample(n = 20) #> Error in darla %>% code_allophones(.old_col = phoneme, .fol_seg = fol_seg,     .pre_seg = pre_seg) %>% slice_sample(n = 20): could not find function \"%>%\"  # Specify the names of the new columns with the `.new_cols` argument darla %>%   code_allophones(.old_col = phoneme,                   .new_cols = c(\"allophone\", \"environment\"),                   .fol_seg = fol_seg,                   .pre_seg = pre_seg) %>%   slice_sample(n = 20) #> Error in darla %>% code_allophones(.old_col = phoneme, .new_cols = c(\"allophone\",     \"environment\"), .fol_seg = fol_seg, .pre_seg = pre_seg) %>%     slice_sample(n = 20): could not find function \"%>%\"  # Filtering by environment is straightforward darla %>%   code_allophones(.old_col = phoneme,                   .new_cols = c(\"allophone\", \"environment\"),                   .fol_seg = fol_seg,                   .pre_seg = pre_seg) %>%   filter(environment == \"elsewhere\") %>%   slice_sample(n = 20) #> Error in darla %>% code_allophones(.old_col = phoneme, .new_cols = c(\"allophone\",     \"environment\"), .fol_seg = fol_seg, .pre_seg = pre_seg) %>%     filter(environment == \"elsewhere\") %>% slice_sample(n = 20): could not find function \"%>%\" darla %>%   code_allophones(.old_col = phoneme,                   .new_cols = c(\"allophone\", \"environment\"),                   .fol_seg = fol_seg,                   .pre_seg = pre_seg) %>%   filter(!environment %in% c(\"prerhotic\", \"prevelarnasal\", \"prevelar\")) %>%   slice_sample(n = 20) #> Error in darla %>% code_allophones(.old_col = phoneme, .new_cols = c(\"allophone\",     \"environment\"), .fol_seg = fol_seg, .pre_seg = pre_seg) %>%     filter(!environment %in% c(\"prerhotic\", \"prevelarnasal\",         \"prevelar\")) %>% slice_sample(n = 20): could not find function \"%>%\"  # Some users may want to supply their own list of coronal consonants. darla %>%   code_allophones(.old_col = phoneme,                   .new_cols = c(\"allophone\", \"environment\"),                   .fol_seg = fol_seg,                   .pre_seg = pre_seg,                   .coronals = c(\"T\", \"D\", \"S\", \"Z\", \"SH\", \"ZH\", \"JH\", \"N\", \"Y\")) %>%   filter(phoneme == \"GOOSE\") %>%   slice_sample(n = 20) #> Error in darla %>% code_allophones(.old_col = phoneme, .new_cols = c(\"allophone\",     \"environment\"), .fol_seg = fol_seg, .pre_seg = pre_seg, .coronals = c(\"T\",     \"D\", \"S\", \"Z\", \"SH\", \"ZH\", \"JH\", \"N\", \"Y\")) %>% filter(phoneme ==     \"GOOSE\") %>% slice_sample(n = 20): could not find function \"%>%\"  # Other users may want to specify their own list of voiceless consonants. darla %>%   code_allophones(.old_col = phoneme,                   .new_cols = c(\"allophone\", \"environment\"),                   .fol_seg = fol_seg,                   .pre_seg = pre_seg,                   .voiceless = c(\"P\", \"T\", \"K\", \"CH\", \"F\", \"TH\", \"S\", \"SH\", \"X\")) %>%   filter(phoneme == \"PRICE\") %>%   slice_sample(n = 20) #> Error in darla %>% code_allophones(.old_col = phoneme, .new_cols = c(\"allophone\",     \"environment\"), .fol_seg = fol_seg, .pre_seg = pre_seg, .voiceless = c(\"P\",     \"T\", \"K\", \"CH\", \"F\", \"TH\", \"S\", \"SH\", \"X\")) %>% filter(phoneme ==     \"PRICE\") %>% slice_sample(n = 20): could not find function \"%>%\"  # Collapsing distinctions can be done post hoc (though it may take extra work to get the environment column to match.) darla %>%   code_allophones(.old_col = phoneme,                   .new_cols = c(\"allophone\", \"environment\"),                   .fol_seg = fol_seg,                   .pre_seg = pre_seg) %>%   # Get a subset for demonstration purposes   filter(allophone %in% c(\"BIT\", \"BIG\")) %>%   group_by(allophone) %>%   slice_sample(n = 5) %>%   ungroup() %>%   # Now collapse distinctions   mutate(allophone = fct_collapse(allophone, \"BIT\" = c(\"BIT\", \"BIG\")),          environment = ifelse(allophone == \"BIT\", \"elsewhere\", allophone)) #> Error in darla %>% code_allophones(.old_col = phoneme, .new_cols = c(\"allophone\",     \"environment\"), .fol_seg = fol_seg, .pre_seg = pre_seg) %>%     filter(allophone %in% c(\"BIT\", \"BIG\")) %>% group_by(allophone) %>%     slice_sample(n = 5) %>% ungroup() %>% mutate(allophone = fct_collapse(allophone,     BIT = c(\"BIT\", \"BIG\")), environment = ifelse(allophone ==     \"BIT\", \"elsewhere\", allophone)): could not find function \"%>%\"  # Creating new allophones depends on the complexity of the allophone darla %>%   code_allophones(.old_col = phoneme,                   .new_cols = c(\"allophone\", \"environment\"),                   .fol_seg = fol_seg,                   .pre_seg = pre_seg) %>%   # Create voice and voiceless distinctions for MOUTH   mutate(allophone = case_when(phoneme == \"MOUTH\" & fol_seg %in% c(\"P\", \"T\", \"K\", \"CH\", \"F\", \"TH\", \"S\", \"SH\") ~ \"BOUT\",                                phoneme == \"MOUTH\" ~ \"LOUD\",                                TRUE ~ allophone),          environment = if_else(allophone == \"BOUT\",  \"prevoiceless\", environment)) %>%   # Get a subset for demonstration purposes   filter(phoneme == \"MOUTH\") %>%   group_by(allophone) %>%   slice_sample(n = 5) %>%   ungroup() #> Error in darla %>% code_allophones(.old_col = phoneme, .new_cols = c(\"allophone\",     \"environment\"), .fol_seg = fol_seg, .pre_seg = pre_seg) %>%     mutate(allophone = case_when(phoneme == \"MOUTH\" & fol_seg %in%         c(\"P\", \"T\", \"K\", \"CH\", \"F\", \"TH\", \"S\", \"SH\") ~ \"BOUT\",         phoneme == \"MOUTH\" ~ \"LOUD\", TRUE ~ allophone), environment = if_else(allophone ==         \"BOUT\", \"prevoiceless\", environment)) %>% filter(phoneme ==     \"MOUTH\") %>% group_by(allophone) %>% slice_sample(n = 5) %>%     ungroup(): could not find function \"%>%\""},{"path":"https://joeystanley.github.io/joeyr/reference/color_gradienter.html","id":null,"dir":"Reference","previous_headings":"","what":"Color Gradienter — color_gradienter","title":"Color Gradienter — color_gradienter","text":"Get number equidistant colors two colors.","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/color_gradienter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Color Gradienter — color_gradienter","text":"","code":"color_gradienter(hi, lo = \"#ffffff\", shades)"},{"path":"https://joeystanley.github.io/joeyr/reference/color_gradienter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Color Gradienter — color_gradienter","text":"hi string, RGB format (\"#123456\") lo string, RBG format (\"#ffffff\"). default white. shades integer","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/color_gradienter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Color Gradienter — color_gradienter","text":"list strings, RGB format, length `shades` equidistant `hi` `lo`.","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/color_gradienter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Color Gradienter — color_gradienter","text":"function takes two colors number returns n-length list colors equidistant one another. handy plotting categorical, ordinal, binned data want use continuous colors. Note, little buggy may work expected. know enough colors handled fix bugs. Please ese caution.","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/color_gradienter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Color Gradienter — color_gradienter","text":"","code":"library(ggplot2) # By itself, it returns just a list. color_gradienter(\"#33458F\", \"#ffffff\", 5) #> [1] \"#33458f\" \"#6674ab\" \"#99a2c7\" \"#ccd0e3\" \"#ffffff\"  # This can be fed into ggplot::scale_color_manual() df <- data.frame(x = rnorm(50, 0, 1),                  y = rnorm(50, 0, 1),                  color = sample(letters[1:5], 50, replace = TRUE)) ggplot(df, aes(x, y, color = color)) +     geom_point(size = 5) +     scale_color_manual(values = color_gradienter(hi = \"#33458F\", lo = \"#ffffff\", 5))"},{"path":"https://joeystanley.github.io/joeyr/reference/eucl_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Measure euclidean distance — eucl_dist","title":"Measure euclidean distance — eucl_dist","text":"function takes x y coordinates two points finds euclidean distance . Note works two-dimensional data: euclidean distances points three-dimensional space currently supported.","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/eucl_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Measure euclidean distance — eucl_dist","text":"","code":"eucl_dist(x1, x2, y1, y2)"},{"path":"https://joeystanley.github.io/joeyr/reference/eucl_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Measure euclidean distance — eucl_dist","text":"x1, x2, y1, y2 number","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/eucl_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Measure euclidean distance — eucl_dist","text":"distance two points (number).","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/eucl_dist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Measure euclidean distance — eucl_dist","text":"","code":"eucl_dist(1,2,1,2) #> [1] 1.414214"},{"path":"https://joeystanley.github.io/joeyr/reference/fave_to_wells.html","id":null,"dir":"Reference","previous_headings":"","what":"Recode FAVE output to Wells. Not as robust as `switch_allophones` but I'm tired of copying this code over. — fave_to_wells","title":"Recode FAVE output to Wells. Not as robust as `switch_allophones` but I'm tired of copying this code over. — fave_to_wells","text":"Recode FAVE output Wells. robust `switch_allophones` tired copying code .","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/fave_to_wells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recode FAVE output to Wells. Not as robust as `switch_allophones` but I'm tired of copying this code over. — fave_to_wells","text":"","code":"fave_to_wells(.df)"},{"path":"https://joeystanley.github.io/joeyr/reference/find_outliers.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect outliers — find_outliers","title":"Detect outliers — find_outliers","text":"implementation Mahalanobis Distance less sensitive outliers, first implemented Stanley (2020). Instead blanket filter applying , iteratively removes points one time predetermined proportion data removed.","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/find_outliers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect outliers — find_outliers","text":"","code":"find_outliers(..., keep = 0.95, verbose = FALSE)"},{"path":"https://joeystanley.github.io/joeyr/reference/find_outliers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect outliers — find_outliers","text":"... list columns data included calculating Mahalanobis distance. column names quotes. vowel data, typically include F1 F2. may also want include F3, duration, continuous variable. keep number indicating proportion data (per group) keep. default, 0.95 keeps 95% data filters 5%. verbose logical, FALSE default. TRUE, get message every group less 20 tokens saying enough tokens remove outliers. Can quite verbose many speakers/vowels.","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/find_outliers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect outliers — find_outliers","text":"vector TRUE/FALSE values. order original   dataset. Observations considered outliers value TRUE.   easiest work appending vector dataframe.","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/find_outliers.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Detect outliers — find_outliers","text":"Mahalanobis distance function somewhat sensitive outliers, extreme values data, mean value -center centroid observations. Consequently, Mahalanobis Distances based -center points, probably desirable. function alleviates sensitivity outliers implementing one---time method. run function, first calculate Mahalanobis distance mean values. detects point furthest mean removes . , recalculates Mahalanobis distance remaining values removes furthest value. continues recalculation--removal method predetermined proportion values removed.","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/find_outliers.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Detect outliers — find_outliers","text":"required, typically \"group\" data applying   function. example, can group data speaker vowel   function applies independently vowel speaker.   normally dplyr::group_by(speaker, word) Note also American English, allophonic variation vowels   great grouping vowel may enough. working /u/   example, good idea split three groups: post-coronal, pre-lateral,   elsewhere. /æ/, good idea group prenasal tokens separately.   using FAVE/DARLA/MFA output, NORTH FORCE classes words   transcribed AO, good idea treat separately. point   mindful allophonic variation data good   idea group data vowel class rather vowel. may   processing filter happens get happen.   version 0.8 joeyr, can now use code_allophones function   automatically classify data allophones. Finally, aware tokens marked outliers   sufficient number tokens. want remove 5   need least 20 tokens group outlier   found within group. message let know happens.   Unfortunately, function help determine group(s)   message came , can find dplyr::count(). See   examples.","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/find_outliers.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Detect outliers — find_outliers","text":"use function, can refer something like \"Modified Mahalanobis Distance method implemented Stanley (2020).\" Stanley, Joseph . \"Absence Religiolect among Latter-Day Saints Southwest Washington.\" Speech Western States: Volume 3, Understudied Varieties, Valerie Fridland, Alicia Beckford Wassink, Lauren Hall-Lew, Tyler Kendall, 95–122. Publication American Dialect Society 105. Durham, NC: Duke University Press, 2020. https://doi.org/10.1215/00031283-8820642.","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/find_outliers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect outliers — find_outliers","text":"","code":"suppressPackageStartupMessages(library(dplyr)) df <- joeysvowels::coronals #> Error in loadNamespace(x): there is no package called ‘joeysvowels’  # You can output the data to a column called something like \"is_outlier\" and # then filter out values that are TRUE. df %>%    group_by(vowel) %>%    mutate(is_outlier = find_outliers(F1, F2, keep = 0.95)) %>%    filter(!is_outlier) #> Error in UseMethod(\"group_by\"): no applicable method for 'group_by' applied to an object of class \"function\"  # Alternatively, you can skip a step and just keep the data that are not # outliers. df %>%    group_by(vowel) %>%    filter(!find_outliers(F1, F2)) #> Error in UseMethod(\"group_by\"): no applicable method for 'group_by' applied to an object of class \"function\"  # In some cases, you might not have enough data. In this case, a warning # message will appear. df %>%     filter(percent == 50) %>%     group_by(vowel) %>%     mutate(is_outlier = find_outliers(F1, F2, keep = 0.95)) #> Error in UseMethod(\"filter\"): no applicable method for 'filter' applied to an object of class \"function\" # You can find out which groups have less than 20 tokens with `dplyr::count()`: df %>%     filter(percent == 50) %>%     group_by(vowel) %>%     count() #> Error in UseMethod(\"filter\"): no applicable method for 'filter' applied to an object of class \"function\""},{"path":"https://joeystanley.github.io/joeyr/reference/get_centroids.html","id":null,"dir":"Reference","previous_headings":"","what":"Get centroids — get_centroids","title":"Get centroids — get_centroids","text":"Runs summarizing function specified column, specified group. intended used plot centroids ellipses ggplot2 without create new object lot -line code. See examples .","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/get_centroids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get centroids — get_centroids","text":"","code":"get_centroids(df, .cols, ..., .fns = median)"},{"path":"https://joeystanley.github.io/joeyr/reference/get_centroids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get centroids — get_centroids","text":"df dataframe. .cols columns summarized. sociophonetic data, usually names vowel columns, e.g. c(F1, F2). literally just passed `across` function within `summarize`. ... grouping variables. sociophonetic data, might speaker allophone something. just passed `group_by`. .fns one names functions. default, median. passed `across`.","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/get_centroids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get centroids — get_centroids","text":"ungrouped dataframe","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/get_centroids.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Get centroids — get_centroids","text":"Okay technically function name misnomer truly getting centroids mathematical sense. think run going .","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/get_centroids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get centroids — get_centroids","text":"","code":"library(tidyverse) #> Error in library(tidyverse): there is no package called ‘tidyverse’ df <- joeysvowels::idahoans #> Error in loadNamespace(x): there is no package called ‘joeysvowels’  # Basic usage as a summarizing function df %>%   get_centroids(c(F1, F2), vowel) #> Error in UseMethod(\"group_by\"): no applicable method for 'group_by' applied to an object of class \"function\"  # Within a ggplot2 block. Note that you do have to start the data argument with the dot and pipe it into get_centroids, rather than incorporating it in (i.e. get_centroids(., vowel)). Not sure why but this appears to be a contraint imposed by ggplot2. ggplot(df, aes(F2, F1, color = vowel)) +   stat_ellipse(level = 0.67) +   geom_text(data = . %>% get_centroids(c(F1, F2), vowel), aes(label = vowel)) +   scale_x_reverse() +   scale_y_reverse() +   theme(legend.position = \"none\") #> Error in ggplot(df, aes(F2, F1, color = vowel)): `data` cannot be a function. #> ℹ Have you misspelled the `data` argument in `ggplot()`  # You can add multiple groups to the code too. ggplot(df, aes(F2, F1, color = vowel)) +   stat_ellipse(level = 0.67) +   geom_text(data = . %>% get_centroids(c(F1, F2), speaker, vowel), aes(label = vowel)) +   scale_x_reverse() +   scale_y_reverse() +   facet_wrap(~speaker, scales = \"free\") +   theme(legend.position = \"none\") #> Error in ggplot(df, aes(F2, F1, color = vowel)): `data` cannot be a function. #> ℹ Have you misspelled the `data` argument in `ggplot()`  # Like any use of group_by(), additional, perhaps redundant columns may be specified for the purpose of \"passing them through.\" In this example, adding tense_lax doesn't change the calculations, but it's useful for this plot. Additionally, this block of code highlights one strength of get_centroids, and that is that I can pass in a modified dataframe directly to ggplot and then modify it even further to get the labels, without needing to create any new objects. df %>%   mutate(tense_lax = fct_collapse(vowel,                                   \"tense\" = c(\"IY\", \"EY\", \"AO\", \"OW\", \"UW\"),                                   \"lax\"   = c(\"IH\", \"EH\", \"AE\", \"AA\", \"AH\", \"UH\"))) %>%   ggplot(aes(F2, F1, color = tense_lax, group = vowel)) +   stat_ellipse(level = 0.67) +   geom_text(data = . %>% get_centroids(c(F1, F2), speaker, tense_lax, vowel),             aes(label = vowel)) +   scale_x_reverse() +   scale_y_reverse() +   facet_wrap(~speaker, scales = \"free\") +   theme(legend.position = \"none\") #> Error in UseMethod(\"mutate\"): no applicable method for 'mutate' applied to an object of class \"function\"  # For column selection, any tidyselect output works, such as matches(). df %>%   get_centroids(matches(\"F\\\\d\"), speaker, vowel) #> Error in UseMethod(\"group_by\"): no applicable method for 'group_by' applied to an object of class \"function\"  # For functions, you can add more than one. Just wrap them up into c(). df %>%   get_centroids(c(F1, F2), .fns = c(median, mean), speaker, vowel) #> Error in UseMethod(\"group_by\"): no applicable method for 'group_by' applied to an object of class \"function\"  # However, unless they are named, they won't be useful. df %>%   get_centroids(c(F1, F2), .fns = c(`med` = median, `average` = mean), speaker, vowel) #> Error in UseMethod(\"group_by\"): no applicable method for 'group_by' applied to an object of class \"function\""},{"path":"https://joeystanley.github.io/joeyr/reference/grapes-expanded_by-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Expand a range — %expanded_by%","title":"Expand a range — %expanded_by%","text":"function expands ranges value. Used dissertation code axis ranges.","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/grapes-expanded_by-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expand a range — %expanded_by%","text":"","code":"range %expanded_by% expansion"},{"path":"https://joeystanley.github.io/joeyr/reference/grapes-expanded_by-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expand a range — %expanded_by%","text":"range numeric vector. highest lowest values used range. expansion number. number added highest subtracted lowest values range","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/grapes-expanded_by-grapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expand a range — %expanded_by%","text":"list length 2","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/grapes-expanded_by-grapes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expand a range — %expanded_by%","text":"","code":"c(1,5) %expanded_by% 1 #> [1] 0 6"},{"path":"https://joeystanley.github.io/joeyr/reference/grapes-ni-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"The ","title":"The ","text":"returns TRUE values list. opposite %%. particularly good subsetting want remove things (like diphthongs). can remove rather specifying monophthongs want keep.","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/grapes-ni-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The ","text":"","code":"x %ni% y"},{"path":"https://joeystanley.github.io/joeyr/reference/grapes-ni-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The ","text":"x vector, presumably subset \"y\" y vector","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/grapes-ni-grapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The ","text":"list logicals indicating whether objects x contained y.","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/grapes-ni-grapes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The ","text":"Note function can easily accomplished !x %% y, like \"\" aspect. Probably holdover Perl days... can also define function `%ni%` <- Negate(`%%`) looking documentation %%, found might better modify formal definition instead. Credit Stack Overflow question showing get work R package.","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/grapes-ni-grapes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The ","text":"","code":"1:10 %in% c(1,3,5,9) #>  [1]  TRUE FALSE  TRUE FALSE  TRUE FALSE FALSE FALSE  TRUE FALSE 1:10 %ni% c(1,3,5,9) #>  [1] FALSE  TRUE FALSE  TRUE FALSE  TRUE  TRUE  TRUE FALSE  TRUE"},{"path":"https://joeystanley.github.io/joeyr/reference/grapes-wi-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Within — %wi%","title":"Within — %wi%","text":"handy \"within\" range. Checks whether number within range. Capable handling lists can apply whole column. Basically got tired running two-part conditional wanted something within range: (x > 2 & x < 5).","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/grapes-wi-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Within — %wi%","text":"","code":"x %wi% range"},{"path":"https://joeystanley.github.io/joeyr/reference/grapes-wi-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Within — %wi%","text":"x numeric vector. range numeric vector. highest lowest values used range.","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/grapes-wi-grapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Within — %wi%","text":"logical vector.","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/grapes-wi-grapes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Within — %wi%","text":"","code":"4 %wi% c(1,5) #> [1] TRUE c(2, 3) %wi% c(1,5) #> [1] TRUE TRUE c(1:5) %wi% c(4,6) #> [1] FALSE FALSE FALSE  TRUE  TRUE"},{"path":"https://joeystanley.github.io/joeyr/reference/joeyr_norm_anae.html","id":null,"dir":"Reference","previous_headings":"","what":"ANAE Vowel Normalization — joeyr_norm_anae","title":"ANAE Vowel Normalization — joeyr_norm_anae","text":"tidyverse-compatible function makes easy normalize data using method described Atlas North American English (Labov, Ash, & Boberg 2006).","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/joeyr_norm_anae.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ANAE Vowel Normalization — joeyr_norm_anae","text":"","code":"joeyr_norm_anae(df, hz_cols, token_id, speaker_id, g = \"telsur\")  norm_anae(.df)"},{"path":"https://joeystanley.github.io/joeyr/reference/joeyr_norm_anae.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ANAE Vowel Normalization — joeyr_norm_anae","text":"df dataframe containing formant measurements want normalize. hz_cols list columns (unquoted) containing formant measurements . token_id name column containing unique identifiers per vowel token. data set one row per token, can put row.names(.) instead. speaker_id name column containing unique identifiers per speaker (usually column containing speaker name). g default, \"telsur\", whichwill use Telsur G value (6.896874) listed ANAE. set \"calculate\", calculate G value based dataset. can set arbitrary number, 0 well.","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/joeyr_norm_anae.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ANAE Vowel Normalization — joeyr_norm_anae","text":"dataframe, new column(s), suffixed \"_anae\" normalized data.","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/joeyr_norm_anae.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ANAE Vowel Normalization — joeyr_norm_anae","text":"data must grouped speaker prior running function. function works best F1 F2 data included. F3 can included results may comparable studies. default, function use Telsur G value listed ANAE (6.896874) make results compatible ANAE studies use normalization procedure. function can calculate G value based dataset provided g set \"calculate\". Alternatively, g can set arbitrary number, zero. unclear ANAE function work trajectory data. function pools data together normalizes together, means one small modification required calculate G value Telsur G used: add average number time points per vowel token denominator. sure done, makes sense returns sensible results.","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/joeyr_norm_anae.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"ANAE Vowel Normalization — joeyr_norm_anae","text":"June 18, 2025, `norm_anae` function depreciated favor various functions tidynorm package. recommend switch future code. want retain current functionality, can call `joeyr_norm_anae` instead.","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/joeyr_norm_anae.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"ANAE Vowel Normalization — joeyr_norm_anae","text":"Labov, William, Sharon Ash, Charles Boberg. Atlas North American English: Phonetics, Phonology Sound Change. Berlin: Walter de Gruyter, 2006.","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/joeyr_norm_anae.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ANAE Vowel Normalization — joeyr_norm_anae","text":"","code":"library(tidyverse) #> Error in library(tidyverse): there is no package called ‘tidyverse’ df <- joeysvowels::idahoans #> Error in loadNamespace(x): there is no package called ‘joeysvowels’  df %>%    group_by(speaker) %>%    norm_anae(hz_cols = c(F1, F2), speaker_id = speaker) %>%    ungroup() %>%    select(F1, F2, F1_anae, F2_anae) # <- just the relevant columns #> Error in norm_anae(., hz_cols = c(F1, F2), speaker_id = speaker): unused arguments (hz_cols = c(F1, F2), speaker_id = speaker)  # Slightly different if G is calculated internally. df %>%    group_by(speaker) %>%    norm_anae(hz_cols = c(F1, F2), speaker_id = speaker, g = \"calculate\") %>%    ungroup() %>%    select(F1, F2, F1_anae, F2_anae) # <- just the relevant columns #> Error in norm_anae(., hz_cols = c(F1, F2), speaker_id = speaker, g = \"calculate\"): unused arguments (hz_cols = c(F1, F2), speaker_id = speaker, g = \"calculate\")  # G can be set to an arbitrary value. df %>%    group_by(speaker) %>%    norm_anae(hz_cols = c(F1, F2), speaker_id = speaker, g = 0) %>%    ungroup() %>%    select(F1, F2, F1_anae, F2_anae) # <- just the relevant columns #> Error in norm_anae(., hz_cols = c(F1, F2), speaker_id = speaker, g = 0): unused arguments (hz_cols = c(F1, F2), speaker_id = speaker, g = 0)"},{"path":"https://joeystanley.github.io/joeyr/reference/joeyr_norm_deltaF.html","id":null,"dir":"Reference","previous_headings":"","what":"∆F Normalization — joeyr_norm_deltaF","title":"∆F Normalization — joeyr_norm_deltaF","text":"Normalize vowel formant measurements ∆F (see Johnson 2020). function intended used within tidyverse pipeline.","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/joeyr_norm_deltaF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"∆F Normalization — joeyr_norm_deltaF","text":"","code":"joeyr_norm_deltaF(   df,   .F1,   .F2,   .F3,   .F4,   suffix = \"_deltaF\",   return = \"formants\" )  norm_deltaF(.df)"},{"path":"https://joeystanley.github.io/joeyr/reference/joeyr_norm_deltaF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"∆F Normalization — joeyr_norm_deltaF","text":"df data frame containing formant measurements want normalize .F1, .F2, .F3, .F4 (unquoted) name column containing F1 measurements. first three required, may leave F4. recommended include F4 data available reliable since produces accurate results. suffix string. suffix like append column names new normalized columns. default, \"_deltaF\" original F1 column called F1 normalized one F1_deltaF. return string. default, \"formants\" 'll return normalized values . like see actual ΔF values, can putting \"deltaF\" instead.","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/joeyr_norm_deltaF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"∆F Normalization — joeyr_norm_deltaF","text":"original dataframe new columns containing normalized measurements.","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/joeyr_norm_deltaF.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"∆F Normalization — joeyr_norm_deltaF","text":"∆F normalization technique based single, interpretable parameter speaker. parameter called ∆F \"estimate formant spacing vocal tract constrictions\" (Johnson 2020:10). need group data speaker group_by() applying function want normalize data speaker. data must numeric, NAs. , using data extracted Praat, may filter bad F3 F4 data convert column numeric. Note new function tested robustly yet.","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/joeyr_norm_deltaF.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"∆F Normalization — joeyr_norm_deltaF","text":"June 18, 2025, `norm_deltaF` function depreciated favor function name tidynorm package. recommend switch future code. want retain current functionality, can call `joeyr_norm_deltaF` instead.","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/joeyr_norm_deltaF.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"∆F Normalization — joeyr_norm_deltaF","text":"Johnson, Keith. 2020. ΔF Method Vocal Tract Length Normalization Vowels. Laboratory Phonology: Journal Association Laboratory Phonology 11(1). https://doi.org/10.5334/labphon.196.","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/joeyr_norm_deltaF.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"∆F Normalization — joeyr_norm_deltaF","text":"","code":"library(tidyverse) #> Error in library(tidyverse): there is no package called ‘tidyverse’ df <- joeysvowels::idahoans #> Error in loadNamespace(x): there is no package called ‘joeysvowels’  # Basic usage df %>%    group_by(speaker) %>%    norm_deltaF(F1, F2, F3, F4) #> Error in norm_deltaF(., F1, F2, F3, F4): unused arguments (F1, F2, F3, F4)  # F4 is not required df %>%    group_by(speaker) %>%    norm_deltaF(F1, F2, F3) #> Error in norm_deltaF(., F1, F2, F3): unused arguments (F1, F2, F3)  # Change the new columns' suffix df %>%    group_by(speaker) %>%    norm_deltaF(F1, F2, F3, suffix = \"_norm\") #> Error in norm_deltaF(., F1, F2, F3, suffix = \"_norm\"): unused arguments (F1, F2, F3, suffix = \"_norm\")  # Return ∆F instead df %>%    group_by(speaker) %>%    norm_deltaF(F1, F2, F3, F4, return = \"deltaF\") #> Error in norm_deltaF(., F1, F2, F3, F4, return = \"deltaF\"): unused arguments (F1, F2, F3, F4, return = \"deltaF\")"},{"path":"https://joeystanley.github.io/joeyr/reference/joeyr_norm_logmeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Log-means normalization — joeyr_norm_logmeans","title":"Log-means normalization — joeyr_norm_logmeans","text":"Normalize vowel formant measurements log-means normalization procedure described Barreda & Nearey (2018). function intended used within tidyverse pipeline.","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/joeyr_norm_logmeans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log-means normalization — joeyr_norm_logmeans","text":"","code":"joeyr_norm_logmeans(   .df,   .formant_cols,   .speaker_col,   .vowel_col,   .return = \"data\",   i_know_more_than_you = FALSE )  norm_logmeans(.df)"},{"path":"https://joeystanley.github.io/joeyr/reference/joeyr_norm_logmeans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log-means normalization — joeyr_norm_logmeans","text":".df data frame containing formant measurements want normalize. Formant data must log transformed! See example code . .formant_cols (unquoted) name(s) column containing formant measurements. .speaker_col (unquoted) name column containing unique identifiers per speaker. .vowel_col (unquoted) name column containing unique identifiers per vowel .return string. default, \"data\", returned original data normalized data appended. set \"params\", get data frame normalization paramters speakers. i_know_more_than_you Logical. function work got data look like log-transformed formant data. want force function run anyway, set `TRUE`.","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/joeyr_norm_logmeans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log-means normalization — joeyr_norm_logmeans","text":"original dataframe new columns containing normalized measurements. new columns \"_norm\" appended column names.","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/joeyr_norm_logmeans.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Log-means normalization — joeyr_norm_logmeans","text":"data grouped beforehand (e.g. group_by). data must numeric, NAs.","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/joeyr_norm_logmeans.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Log-means normalization — joeyr_norm_logmeans","text":"June 18, 2025, `norm_logmeans` function depreciated favor `norm_nearey` function tidynorm package. recommend switch future code. want retain current functionality, can call `joeyr_norm_logmeans` instead. Thanks Santiago Barreda providing code function.","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/joeyr_norm_logmeans.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Log-means normalization — joeyr_norm_logmeans","text":"Barreda, Santiago, Terrance M. Nearey. 2018. \"Regression Approach Vowel Normalization Missing Unbalanced Data.\" Journal Acoustical Society America 144(1): 500–520. https://doi.org/10.1121/1.5047742.","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/joeyr_norm_logmeans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Log-means normalization — joeyr_norm_logmeans","text":"","code":"library(tidyverse) #> Error in library(tidyverse): there is no package called ‘tidyverse’ idaho <- joeysvowels::idahoans #> Error in loadNamespace(x): there is no package called ‘joeysvowels’  # Basic usage. Note that the data has to be log10-transformed. idaho %>%     mutate(F1_log = log10(F1), F2_log = log10(F2)) %>%     norm_logmeans(.formant_cols = c(F1_log, F2_log),                   .speaker_col = speaker,                   .vowel_col = vowel) %>%     head() #> Error in norm_logmeans(., .formant_cols = c(F1_log, F2_log), .speaker_col = speaker,     .vowel_col = vowel): unused arguments (.formant_cols = c(F1_log, F2_log), .speaker_col = speaker, .vowel_col = vowel)  # Return the speaker paramters instead. idaho %>%     mutate(F1_log = log10(F1), F2_log = log10(F2)) %>%     norm_logmeans(.formant_cols = c(F1_log, F2_log),                   .speaker_col = speaker,                   .vowel_col = vowel,                   .return = \"params\") %>%     head() #> Error in norm_logmeans(., .formant_cols = c(F1_log, F2_log), .speaker_col = speaker,     .vowel_col = vowel, .return = \"params\"): unused arguments (.formant_cols = c(F1_log, F2_log), .speaker_col = speaker, .vowel_col = vowel, .return = \"params\")  # If you forget to log-transform the data, it'll throw an error. idaho %>%     norm_logmeans(.formant_cols = c(F1, F2),                   .speaker_col = speaker,                   .vowel_col = vowel) #> Error in norm_logmeans(., .formant_cols = c(F1, F2), .speaker_col = speaker,     .vowel_col = vowel): unused arguments (.formant_cols = c(F1, F2), .speaker_col = speaker, .vowel_col = vowel)  # But you can force the function to run on non-transformed data if you're sure you know what you're doing. idaho %>%     norm_logmeans(.formant_cols = c(F1, F2),                   .speaker_col = speaker,                   .vowel_col = vowel,                   i_know_more_than_you = TRUE) %>%     head() #> Error in norm_logmeans(., .formant_cols = c(F1, F2), .speaker_col = speaker,     .vowel_col = vowel, i_know_more_than_you = TRUE): unused arguments (.formant_cols = c(F1, F2), .speaker_col = speaker, .vowel_col = vowel, i_know_more_than_you = TRUE)"},{"path":"https://joeystanley.github.io/joeyr/reference/lbms_index.html","id":null,"dir":"Reference","previous_headings":"","what":"Low-Back-Merger Shift Index — lbms_index","title":"Low-Back-Merger Shift Index — lbms_index","text":"function quickly calculate Low-Back-Merger Shift Index, per Becker (2019).","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/lbms_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Low-Back-Merger Shift Index — lbms_index","text":"","code":"lbms_index(df, vowel_col, F1_col, F2_col, beet, bit, bet, bat)"},{"path":"https://joeystanley.github.io/joeyr/reference/lbms_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Low-Back-Merger Shift Index — lbms_index","text":"df dataframe containing formant measurements want base calculation . vowel_col name column containing name vowel (e.g. vowel) F1_col name column containing F1 measurements (e.g. F1_norm) F2_col name column containing F2 measurements (e.g. F2_norm) beet string indicates vowels belong BEET class words (e.g. \"IY\") bit string indicates vowels belong BIT class words (e.g. \"IH\") bet string indicates vowels belong BET class words (e.g. \"EH\") bat string indicates vowels belong BAT class words (e.g. \"AE\")","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/lbms_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Low-Back-Merger Shift Index — lbms_index","text":"summarized dataframe LBMS Index.","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/lbms_index.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Low-Back-Merger Shift Index — lbms_index","text":"like calculate LBMS Index speaker, sure data beforehand group_by() (see examples). Also, per Becker's (2019) recommendation, recommended exclude tokens nasals, laterals, rhotics, /g/ calculation. also recommended run function Lobanov-normalized data. Note new function tested robustly yet.","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/lbms_index.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Low-Back-Merger Shift Index — lbms_index","text":"Becker, Kara, ed. Low-Back-Merger Shift: Uniting Canadian Vowel Shift, California Vowel Shift, Short Front Vowel Shifts across North America. Publication American Dialect Society 104. Durham, NC: Duke University Press, 2019.","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/lbms_index.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Low-Back-Merger Shift Index — lbms_index","text":"","code":"suppressPackageStartupMessages(library(tidyverse)) #> Error in library(tidyverse): there is no package called ‘tidyverse’ # This dataset has following segment and normalized data already darla <- joeysvowels::darla #> Error in loadNamespace(x): there is no package called ‘joeysvowels’ darla %>%   filter(!fol_seg %in% c(\"L\", \"R\", \"M\", \"N\", \"NG\", \"G\")) %>%   lbms_index(vowel, F1_LobanovNormed_unscaled, F2_LobanovNormed_unscaled, \"IY\", \"IH\", \"EH\", \"AE\") #> Error in pivot_wider(., names_from = .vowel, values_from = c(.F1, .F2)): could not find function \"pivot_wider\"  # This dataset has multiple speakers and needs to be normalized idahoans <- joeysvowels::idahoans #> Error in loadNamespace(x): there is no package called ‘joeysvowels’ idahoans %>%   group_by(speaker) %>%   mutate(F1_lob = scale(F1),          F2_lob = scale(F2)) %>%   lbms_index(vowel, F1_lob, F2_lob, \"IY\", \"IH\", \"EH\", \"AE\") #> Error in pivot_wider(., names_from = .vowel, values_from = c(.F1, .F2)): could not find function \"pivot_wider\""},{"path":"https://joeystanley.github.io/joeyr/reference/pillai.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Pillai scores — pillai","title":"Calculate Pillai scores — pillai","text":"function runs MANOVA returns summary statistics. pillai get just pillai score manova_p get p-value. works great within tidyverse pipeline, though function uses base R.","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/pillai.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Pillai scores — pillai","text":"","code":"pillai(...)  manova_p(...)"},{"path":"https://joeystanley.github.io/joeyr/reference/pillai.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Pillai scores — pillai","text":"... Arguments may also passed manova(). Typically formula dataframe.","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/pillai.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Pillai scores — pillai","text":"pillai score MANOVA test.","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/pillai.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Pillai scores — pillai","text":"function best run got data properly subsetted two vowels' data included. want calculate pillai score multiple speakers, can grouping data beforehand (using dplyr::group_by()). want incorporate function within tidyverse pipeline, best within `dplyr::summarize()` since boiling lot data just one number. See examples . Note just MANOVA hood, can incorporate whatever variables want within model. However, currently, pillai score first independent variable returned. want include vowel duration model, example, mostly interested vowel, sure put first formula immediately tilde. NAs crash function, observations NAs excluded analysis.","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/pillai.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Pillai scores — pillai","text":"","code":"suppressPackageStartupMessages(library(tidyverse)) #> Error in library(tidyverse): there is no package called ‘tidyverse’ options(dplyr.summarise.inform = FALSE)  # Look at the low back merger in one speaker. one_speaker <- joeysvowels::midpoints #> Error in loadNamespace(x): there is no package called ‘joeysvowels’ one_speaker %>%   filter(vowel %in% c(\"LOT\", \"THOUGHT\")) %>%   summarize(pillai = pillai(cbind(F1, F2) ~ vowel)) #> Error: object 'one_speaker' not found  # A non-tidyverse method pillai(cbind(F1, F2) ~ vowel, data = subset(one_speaker, vowel %in% c(\"LOT\", \"THOUGHT\"))) #> Error: object 'one_speaker' not found  # Look at the low back merger in many speakers many_speakers <- joeysvowels::idahoans #> Error in loadNamespace(x): there is no package called ‘joeysvowels’ many_speakers %>%   filter(vowel %in% c(\"AA\", \"AO\")) %>%   group_by(speaker) %>%   summarize(pillai = pillai(cbind(F1, F2) ~ vowel)) #> Error: object 'many_speakers' not found  # Other variables can be included, but the pillai of only the first independent variable is returned one_speaker %>%   filter(vowel %in% c(\"LOT\", \"THOUGHT\")) %>%   mutate(dur = end - start) %>%   summarize(pillai = pillai(cbind(F1, F2, F3, F4) ~ vowel + dur)) #> Error: object 'one_speaker' not found  # Observations with NAs are excluded from the analysis one_speaker[8,]$F1 <- NA #> Error: object 'one_speaker' not found one_speaker %>%   filter(vowel %in% c(\"LOT\", \"THOUGHT\")) %>%   summarize(pillai = pillai(cbind(F1, F2) ~ vowel)) #> Error: object 'one_speaker' not found"},{"path":"https://joeystanley.github.io/joeyr/reference/switch_transcriptions.html","id":null,"dir":"Reference","previous_headings":"","what":"Switch between transcription systems. — switch_transcriptions","title":"Switch between transcription systems. — switch_transcriptions","text":"function switch ARPABET, Wells' Lexical Sets, B_T set, IPA.","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/switch_transcriptions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Switch between transcription systems. — switch_transcriptions","text":"","code":"switch_transcriptions(   x,   .from,   .to,   ordered = TRUE,   as_character = FALSE,   warn = TRUE )  arpa_to_b_t(...)  arpa_to_ipa(...)  arpa_to_wells(...)  b_t_to_arpa(...)  b_t_to_ipa(...)  b_t_to_wells(...)  ipa_to_arpa(...)  ipa_to_b_t(...)  ipa_to_wells(...)  wells_to_arpa(...)  wells_to_ipa(...)  wells_to_b_t(...)"},{"path":"https://joeystanley.github.io/joeyr/reference/switch_transcriptions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Switch between transcription systems. — switch_transcriptions","text":"x vector containing vowel labels want convert. .unquoted expression. default, arpa, meaning function convert ARPABET symbols another system. .unquoted expression. default, wells, produce original Wells labels. set \"b_t\", use \"B_T\" frame. ordered logical. default, TRUE, return factor order goes approximately counter clockwise vowel space, diphthongs last. FALSE, retain original order (, unless already specified, alphabetical order R sees individial levels). as_character logical. FALSE default, meaning return vector factor order specified ordered. TRUE, return vector character vector (silently ignore ordered argument). warn logical, TRUE default. levels vector part predefined list , warning message appear alerting fact. function still work, good alerted unexpected input. ordered set TRUE extra levels put end. warning can suppressed setting argument FALSE.","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/switch_transcriptions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Switch between transcription systems. — switch_transcriptions","text":"vector factors recoded. string one preset lists symbols remain unchanged.","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/switch_transcriptions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Switch between transcription systems. — switch_transcriptions","text":"Linguists use different ways code English vowels computer-friendly way. FAVE-Align MFA use ARPABET, assigns two-letter code vowel phoneme (IY, IH, EY, EH, etc.). alternative approach use keyword denoting lexical set, whether original Wells keywords alternative using \"B_T\" frame. See blog post background. ARPABET symbols function IY, IH, EY, EH, AE, AA, AO, AH, OW, UH, UW, AY, AW, OY, ER. original Wells' lexical keywords function FLEECE, KIT, FACE, DRESS, TRAP, LOT, THOUGHT, STRUT, GOAT, FOOT, GOOSE, PRICE, MOUTH, CHOICE, NURSE. lexical set using B_T frame include BEET, BIT, BAIT, BET, BAT, BOT, BOUGHT, , BOAT, BOOK, BOOT, BITE, BOUT, BOY, BIRD. IPA symbols include , ɪ, e, ɛ, æ, ɑ, ɔ, ʌ, o, ʊ, u, ɑɪ, ɑʊ, ɔɪ, ɚ. Note arpa_to_wells shorthand switch_transcriptions(..., .=arpa, .=wells), exports Wells lexical sets. pairs transcription systems shortcut function well (.e. wells_to_b_t, b_t_to_ipa, ipa_to_wells, etc.).","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/switch_transcriptions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Switch between transcription systems. — switch_transcriptions","text":"","code":"suppressPackageStartupMessages(library(tidyverse)) #> Error in library(tidyverse): there is no package called ‘tidyverse’  darla <- joeysvowels::darla #> Error in loadNamespace(x): there is no package called ‘joeysvowels’ darla %>%   mutate(vowel = switch_transcriptions(vowel, .from = arpa, .to = wells)) %>%   count(vowel) #> Error: object 'darla' not found  darla %>%   mutate(vowel = switch_transcriptions(vowel, .from = arpa, .to = wells, ordered = FALSE)) %>%   count(vowel) #> Error: object 'darla' not found  darla %>%   mutate(vowel = switch_transcriptions(vowel, .from = arpa, .to = b_t, as_character = TRUE)) %>%   count(vowel) #> Error: object 'darla' not found  # Works even if not all vowel levels are present darla %>%   filter(vowel %in% c(\"IY\", \"AE\", \"AY\", \"UW\")) %>%   mutate(vowel = switch_transcriptions(vowel, .from = arpa, .to = b_t)) %>%   count(vowel) #> Error: object 'darla' not found  # Here's a non-tidyverse version (though tidyverse is still used under the hood) darla$vowel <- switch_transcriptions(darla$vowel, .from = arpa, .to = b_t) #> Error in filter(., {    {        .from    }} %in% x): ℹ In argument: `arpa %in% x`. #> Caused by error: #> ! object 'darla' not found  # Note that shortcut functions also exist: darla %>%   mutate(vowel = arpa_to_wells(vowel)) %>%   count(vowel) #> Error: object 'darla' not found darla %>%   mutate(vowel = arpa_to_b_t(vowel)) %>%   count(vowel) #> Error: object 'darla' not found"},{"path":"https://joeystanley.github.io/joeyr/reference/tidy_mahalanobis.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Mahalanobis Distance — tidy_mahalanobis","title":"Calculate Mahalanobis Distance — tidy_mahalanobis","text":"tidyverse-tidyverse-compatible version stats::mahalanobis function. just makes easier include part dplyr::mutate.","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/tidy_mahalanobis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Mahalanobis Distance — tidy_mahalanobis","text":"","code":"tidy_mahalanobis(...)"},{"path":"https://joeystanley.github.io/joeyr/reference/tidy_mahalanobis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Mahalanobis Distance — tidy_mahalanobis","text":"... Names columns included Mahalanobis distance. vowel data, typically F1 F2 columns.","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/tidy_mahalanobis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Mahalanobis Distance — tidy_mahalanobis","text":"vector contains Mahalanobis distances observation.","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/tidy_mahalanobis.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Mahalanobis Distance — tidy_mahalanobis","text":"Typically want group data (using dplyr::group_by) speaker vowel class get distance vowel centroids. tell distances, might consider looking tokens square root Mahalanobis distance greater around 2. However, clear, exact cutoff vary depending size variability data. can see might isolate points visually example code . One small modification function stats::mahalanobis fewer 5 measurements group, tidy_mahalanobis returns distance zero. found prevents fatal errors crashing script running function smaller datasets. Note function requires MASS package installed work, need load .","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/tidy_mahalanobis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Mahalanobis Distance — tidy_mahalanobis","text":"","code":"suppressPackageStartupMessages(library(tidyverse)) #> Error in library(tidyverse): there is no package called ‘tidyverse’ df <- joeysvowels::midpoints #> Error in loadNamespace(x): there is no package called ‘joeysvowels’  # Calculate the distances m_dists <- df %>%   group_by(vowel) %>%   mutate(mahal_dist = tidy_mahalanobis(F1, F2)) #> Error in UseMethod(\"group_by\"): no applicable method for 'group_by' applied to an object of class \"function\"  # Take a peek at the resulting dataset m_dists %>%   select(vowel, F1, F2, mahal_dist) %>%   head() #> Error: object 'm_dists' not found  # Plot potential outliers ggplot(m_dists, aes(F2, F1, color = sqrt(mahal_dist) > 2)) +    geom_point() +    scale_x_reverse() +    scale_y_reverse() #> Error: object 'm_dists' not found  # You can include whatever numeric variables you want, like duration df %>%   group_by(vowel) %>%   mutate(dur = end - start) %>%   mutate(mahal_dist = tidy_mahalanobis(F1, F2, dur)) %>%   ggplot(aes(F2, F1, color = sqrt(mahal_dist) > 2.5)) +   geom_point() +   scale_x_reverse() +   scale_y_reverse() #> Error in UseMethod(\"group_by\"): no applicable method for 'group_by' applied to an object of class \"function\"  # Data cannot contain NAs. Remove them before running. df[1,]$F1 <- NA #> Error in `*tmp*`[1, ]: object of type 'closure' is not subsettable df %>%   group_by(vowel) %>%   mutate(mahal_dist = tidy_mahalanobis(F1, F2)) #> Error in UseMethod(\"group_by\"): no applicable method for 'group_by' applied to an object of class \"function\" df %>%   group_by(vowel) %>%   filter(!is.na(F1)) %>%   mutate(mahal_dist = tidy_mahalanobis(F1, F2)) %>%   select(vowel_id, vowel, mahal_dist, F1, F2) %>%   head() #> Error in UseMethod(\"group_by\"): no applicable method for 'group_by' applied to an object of class \"function\""},{"path":"https://joeystanley.github.io/joeyr/reference/ucfirst.html","id":null,"dir":"Reference","previous_headings":"","what":"Capitalize the first letter — ucfirst","title":"Capitalize the first letter — ucfirst","text":"Capitalizes first character string. particularly robust. Copied Perl code.","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/ucfirst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Capitalize the first letter — ucfirst","text":"","code":"ucfirst(str)"},{"path":"https://joeystanley.github.io/joeyr/reference/ucfirst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Capitalize the first letter — ucfirst","text":"str string.","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/ucfirst.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Capitalize the first letter — ucfirst","text":"string first letter capitalized.","code":""},{"path":"https://joeystanley.github.io/joeyr/reference/ucfirst.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Capitalize the first letter — ucfirst","text":"","code":"ucfirst(\"foo bar\") #> [1] \"Foo bar\""},{"path":"https://joeystanley.github.io/joeyr/news/index.html","id":"joeyr-011-july-10-2025","dir":"Changelog","previous_headings":"","what":"joeyr 0.11 (July 10, 2025)","title":"joeyr 0.11 (July 10, 2025)","text":"Added fave_to_wells. robust switch_transcriptions shortcut functions like arpa_to_wells, wanted get something since find copying code now anytime analyze FAVE data. Also switched Bootstrap 5 might visual differences website.","code":""},{"path":"https://joeystanley.github.io/joeyr/news/index.html","id":"joeyr-010-june-18-2025","dir":"Changelog","previous_headings":"","what":"joeyr 0.10 (June 18, 2025)","title":"joeyr 0.10 (June 18, 2025)","text":"normalization functions (norm_logmeans, norm_anae, norm_deltaF) depreciated several reasons. tidynorm package handles much effectively efficiently able (see introduction ). three functions now nothing except give message user recommending switch tidynorm instead. don’t want make switch, three functions still exist package renamed joeyr_norm_logmeans, joeyr_norm_anae joeyr_norm_deltaF. prevents conflicts well. ’ve added simple OoO function reminds recommended order operations . ’ve also removed \"joeyr\" package message loading.","code":""},{"path":"https://joeystanley.github.io/joeyr/news/index.html","id":"joeyr-092-may-1-2025","dir":"Changelog","previous_headings":"","what":"joeyr 0.9.2 (May 1, 2025)","title":"joeyr 0.9.2 (May 1, 2025)","text":"MOUTH gets prelateral allophone now: PROWL. means elsewhere allophone now called BOUT. PRICE gets prelateral prerhotic allophone: CHILD PRIOR. Prevoiceless PRICE changed PRICE BITE. Prevoiced PRICE changed PRIZE BIDE.","code":""},{"path":"https://joeystanley.github.io/joeyr/news/index.html","id":"joeyr-091-february-18-2025","dir":"Changelog","previous_headings":"","what":"joeyr 0.9.1 (February 18, 2025)","title":"joeyr 0.9.1 (February 18, 2025)","text":"Words like tool post-coronal prelateral, previously coded post-coronal. fixed ’re prelateral. wasn’t prerhotic allophone GOOSE, caused words like demure erroneously classified TOOT. Now, prerhotic GOOSE CURE. Note prerhotic FOOT also CURE.","code":""},{"path":"https://joeystanley.github.io/joeyr/news/index.html","id":"joeyr-09-march-27-2023","dir":"Changelog","previous_headings":"","what":"joeyr 0.9 (March 27, 2023)","title":"joeyr 0.9 (March 27, 2023)","text":"get_centroids added.","code":""},{"path":"https://joeystanley.github.io/joeyr/news/index.html","id":"joeyr-081-june-8-2022","dir":"Changelog","previous_headings":"","what":"joeyr 0.8.1 (June 8, 2022)","title":"joeyr 0.8.1 (June 8, 2022)","text":"norm_logmeans() raised cap triggering warning message. find_outliers() now verbose argument , default, suppresses warning message triggered enough data.","code":""},{"path":"https://joeystanley.github.io/joeyr/news/index.html","id":"joeyr-08-may-15-2022","dir":"Changelog","previous_headings":"","what":"joeyr 0.8 (May 15, 2022)","title":"joeyr 0.8 (May 15, 2022)","text":"code_allophones() now added. norm_logmeans() now added, log-means normalization based Barreda & Nearey (2018). norm_anae() updated. use_telser_g argument changed simply g. Previously, wnated calculate g internally, ’d use_telsur_g = FALSE code didn’t work. Now, ’d say g = \"calculate\", work time. Additionally, new functionality g can set arbitrary value, zero: g = 0.","code":""},{"path":"https://joeystanley.github.io/joeyr/news/index.html","id":"joeyr-07-july-26-2021","dir":"Changelog","previous_headings":"","what":"joeyr 0.7 (July 26, 2021)","title":"joeyr 0.7 (July 26, 2021)","text":"arpa_to_keywords() replaced robust flexible switch_transcriptions.","code":""},{"path":"https://joeystanley.github.io/joeyr/news/index.html","id":"joeyr-063-june-3-2021","dir":"Changelog","previous_headings":"","what":"joeyr 0.6.3 (June 3, 2021)","title":"joeyr 0.6.3 (June 3, 2021)","text":"manova_p() now added.","code":""},{"path":"https://joeystanley.github.io/joeyr/news/index.html","id":"joeyr-062-february-6-2021","dir":"Changelog","previous_headings":"","what":"joeyr 0.6.2 (February 6, 2021)","title":"joeyr 0.6.2 (February 6, 2021)","text":"norm_anae() now uses Telsur G default. can suppressed new G value can calculated using data (old default behavior), specifying use_telsur_g = FALSE. norm_anae() now requires data grouped speaker prior running. makes consistent normalization procedures package. wells_to_arpa() created, inverse function arpa_to_wells() needed one time. norm_deltaF() fixed including F4 now works. Additional arguments added well.","code":""},{"path":"https://joeystanley.github.io/joeyr/news/index.html","id":"joeyr-061-september-30-2020","dir":"Changelog","previous_headings":"","what":"joeyr 0.6.1 (September 30, 2020)","title":"joeyr 0.6.1 (September 30, 2020)","text":"pillai() tidy_mahalanobis() get much clearer examples much documentation. arpa_to_keywords() longer crashes dataset didn’t vowels present.","code":""},{"path":"https://joeystanley.github.io/joeyr/news/index.html","id":"joeyr-06-september-27-2020","dir":"Changelog","previous_headings":"","what":"joeyr 0.6 (September 27, 2020)","title":"joeyr 0.6 (September 27, 2020)","text":"arpa_to_keywords() arpa_to_wells() added.","code":""},{"path":"https://joeystanley.github.io/joeyr/news/index.html","id":"joeyr-05-september-24-2020","dir":"Changelog","previous_headings":"","what":"joeyr 0.5 (September 24, 2020)","title":"joeyr 0.5 (September 24, 2020)","text":"Example code now uses joeysvowels package, remote dependency. norm_anae() now robust (thanks, Thomas!)","code":""},{"path":"https://joeystanley.github.io/joeyr/news/index.html","id":"joeyr-04-august-5-2020","dir":"Changelog","previous_headings":"","what":"joeyr 0.4 (August 5, 2020)","title":"joeyr 0.4 (August 5, 2020)","text":"Removed depreciated functions, including hz, bark, spread_n, move_x_before_y, move_x_after_y, functions related old outlier detection procedure (joey_filter, joey_do_pca, joey_adjust_cutoff, joey_rm_outliers). Removed datasets. just added like week ago, decided move separate package {joeysvowels}. Renamed .R filenames Added NEWS.md file track changes package.","code":""},{"path":"https://joeystanley.github.io/joeyr/news/index.html","id":"joeyr-0508","dir":"Changelog","previous_headings":"","what":"joeyr 0.5–0.8","title":"joeyr 0.5–0.8","text":"Apparently didn’t take careful enough notes. bad.","code":""}]
