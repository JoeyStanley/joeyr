% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sociophonetics.R
\name{code_allophones}
\alias{code_allophones}
\title{Code allophones}
\usage{
code_allophones(
  .df,
  .old_col,
  .new_cols = c("allophone", "allophone_environment"),
  .pre_seg,
  .fol_seg,
  .coronals = c("T", "D", "S", "Z", "SH", "ZH", "JH", "N"),
  .voiceless = c("P", "T", "K", "CH", "F", "TH", "S", "SH")
)
}
\arguments{
\item{.df}{The dataset containing vowel data.}

\item{.old_col}{The unquoted name of the column containing the vowel labels. 
Often called "vowel" or "phoneme" in many datasets. Note that the function 
assumes Wells lexical sets (FLEECE, TRAP, etc.) rather than ARPABET (IY, AE, etc.) 
or IPA (i, Ã¦, etc.). If your vowels are not already coded using Wells' labels
you can quickly do so with \code{switch_transcriptions} or one of the 
shortcuts like \code{arpa_to_wells}}

\item{.new_cols}{A vector of two strings containing the names of the columns
you would like to use. By default \code{c("allophone", "allophone_environment")}.
The first name becomes the name of the column containing the new allophone
labels. The second column becomes the name of the column describing those
labels.}

\item{.pre_seg}{The unquoted name of the column that contains the labels for 
the previous segement. In DARLA-generated spreadsheets, this is `pre_seg` and 
in FastTrack-generated spreadsheets, it's `previous_sound`. Assumes ARPABET 
labels.}

\item{.fol_seg}{The unquoted name of the column that contains the labels for 
the following segement. In DARLA-generated spreadsheets, this is `fol_seg` and 
in FastTrack-generated spreadsheets, it's `next_sound`. Assumes ARPABET labels.}

\item{.coronals}{A vector of strings containing ARPABET labels for coronal consonants.
By default, \code{c("T", "D", "S", "Z", "SH", "ZH", "JH", "N")}. This is used
to create the `TOOT` allophone of `GOOSE`.}

\item{.voiceless}{A vector of strings containing ARPABET labels for voiceless
consonants. By default, \code{c("P", "T", "K", "CH", "F", "TH", "S", "SH")}. 
This is used to create the `PRICE` allophone of `PRIZE`.}
}
\value{
A dataframe with two additional columns. One column contains labels 
for the allophones and the other contains category labels for those 
allophones' contexts. The second column can be useful for quickly excluding 
certain allophones like prelaterals or prerhotics or coloring families of 
allophones in visualizations (such as turning all prelateral allophones gray). 
These two new columns are positioned immediately after the original vowel 
column indicated in \code{.old_col},
}
\description{
A function to classify vowel data into contextual allophones.
}
\note{
Here are the list of the contextual allophones that are created. Note 
that I largely follow my own advice about what to call \href{https://joeystanley.com/blog/why-do-people-use-bat-instead-of-trap}{elsewhere allophones},
what to call \href{https://joeystanley.com/blog/extending-wells-lexical-sets-to-prelateral-vowels}{prelateral allophones}, 
and \href{https://joeystanley.com/blog/thoughts-on-allophonic-extensions-to-wells-lexical-sets}{other allophones}. 
Obviously, this list is pretty subjective and largely based on what my own 
research has needed, so it may not work completely for you and your research. 
Please contact me at \email{joey_stanley@byu.edu} if you want to see an allophone 
get added or if you spot an error in the coding.

\itemize{
  \item FLEECE becomes 
    \itemize{
      \item ZEAL before laterals
      \item BEET elsewhere
    }
  \item KIT becomes \itemize{
    \item GUILT before laterals
    \item NEAR before rhotics
    \item BIG before G
    \item BIN before M and N
    \item BING before NG
    \item BIT elsewhere
    }
  \item FACE becomes \itemize{
    \item FLAIL before laterals
    \item VAGUE before G
    \item X elsewhere
    }
  \item DRESS becomes \itemize{
    \item SHELF before laterals
    \item SQUARE before rhotics
    \item BEG before G
    \item BEN before M and N
    \item BENG before NG
    \item BET elsewhere
    }
  \item TRAP becomes \itemize{
    \item TALC before laterals
    \item BAG before G
    \item BAN before M and N
    \item BANG before NG
    \item BAT elsewhere
    }
  \item LOT becomes \itemize{
    \item GOLF before laterals
    \item START before rhotics
    \item BOT elsewhere
    }
  \item THOUGHT becomes \itemize{
    \item FAULT before laterals
    \item FORCE befpre rhotics
    \item BOUGHT elsewhere
    }
  \item STRUT becomes \itemize{
    \item MULCH before laterals
    \item BUT elsewhere
    }
  \item GOAT becomes \itemize{
    \item JOLT before laterals
    \item BOAT elsewhere
    }
  \item FOOT becomes \itemize{
    \item WOLF before laterals
    \item CURE before rhotics
    \item PUT elsewhere
    }
  \item GOOSE becomes \itemize{
    \item MULE before Y
    \item TOOT before coronals
    \item SPOOL before laterals
    \item BOOT elsewhere
    }
  \item PRICE becomes \itemize{
    \item PRICE before voiceless segments
    \item PRIZE elsewhere
    }
  }
  
Unfortunately, it is not straightforward to customize this list but you can 
always copy the source code and modify the list yourself. 

Alternatively, you can use \code{forcats::fct_collapse()} to collapse 
distinctions that you don't need. See example code below. 

You can also of course create your own allophones if desired. Note that some
allophones depend on other environmental information like syllable structure and  
morpheme/word boundaries, or they may be entirely lexical (FORCE vs. NORTH). 
They may be more complicated than what ARPABET can code for (MARY, MERRY, and
MARRY) or just inconsistently coded. For the sake of simplicity, these 
allophones are not included in this function.

The environments therefore are the following 
\itemize{
  \item "prelateral" includes ZEAL, GUILT, FLAIL, SHELF, TALC, GOLF, FAULT, MULCH, JOLT, WOLF, SPOOL
  \item "prerhotic" includes NEAR, SQUARE, START, FORCE, CURE
  \item "prevelar" includes BIG, VAGUE, BEG, BAG, 
  \item "prenasal" includes BIN, BEN, BAN
  \item "prevelarnasal" includes BING, BENG, BANG
  \item "prevoiceless" includes PRICE
  \item "post-Y" includes MULE
  \item "postcoronal" includes TOOT
  \item "elsewhere" includes BEET, BIT, BAIT, BET, BAT, BOT, BOUGHT, BUT, BOAT, PUT, BOOT, PRIZE
}
}
\examples{
suppressPackageStartupMessages(library(tidyverse))

# Get some sample DARLA data to play with
darla <- joeysvowels::darla \%>\%
  select(word, vowel, pre_seg, fol_seg) \%>\%
  mutate(phoneme = joeyr:::arpa_to_wells(vowel), .after = vowel)

# Basic usage
darla \%>\%
  code_allophones(.old_col = phoneme, .fol_seg = fol_seg, .pre_seg = pre_seg) \%>\%
  slice_sample(n = 20)

# Specify the names of the new columns with the `.new_cols` argument
darla \%>\%
  code_allophones(.old_col = phoneme, 
                  .new_cols = c("allophone", "environment"), 
                  .fol_seg = fol_seg, 
                  .pre_seg = pre_seg) \%>\%
  slice_sample(n = 20)

# Filtering by environment is straightforward
darla \%>\%
  code_allophones(.old_col = phoneme, 
                  .new_cols = c("allophone", "environment"), 
                  .fol_seg = fol_seg, 
                  .pre_seg = pre_seg) \%>\%
  filter(environment == "elsewhere") \%>\%
  slice_sample(n = 20)
darla \%>\%
  code_allophones(.old_col = phoneme, 
                  .new_cols = c("allophone", "environment"), 
                  .fol_seg = fol_seg, 
                  .pre_seg = pre_seg) \%>\%
  filter(!environment \%in\% c("prerhotic", "prevelarnasal", "prevelar")) \%>\%
  slice_sample(n = 20)

# Some users may want to supply their own list of coronal consonants.
darla \%>\%
  code_allophones(.old_col = phoneme, 
                  .new_cols = c("allophone", "environment"),
                  .fol_seg = fol_seg, 
                  .pre_seg = pre_seg,
                  .coronals = c("T", "D", "S", "Z", "SH", "ZH", "JH", "N", "Y")) \%>\%
  filter(phoneme == "GOOSE") \%>\%
  slice_sample(n = 20)

# Other users may want to specify their own list of voiceless consonants. 
darla \%>\%
  code_allophones(.old_col = phoneme, 
                  .new_cols = c("allophone", "environment"),
                  .fol_seg = fol_seg, 
                  .pre_seg = pre_seg,
                  .voiceless = c("P", "T", "K", "CH", "F", "TH", "S", "SH", "X")) \%>\%
  filter(phoneme == "PRICE") \%>\%
  slice_sample(n = 20)

# Collapsing distinctions can be done post hoc (though it may take extra work to get the environment column to match.)
darla \%>\%
  code_allophones(.old_col = phoneme, 
                  .new_cols = c("allophone", "environment"), 
                  .fol_seg = fol_seg, 
                  .pre_seg = pre_seg) \%>\%
  # Get a subset for demonstration purposes
  filter(allophone \%in\% c("BIT", "BIG")) \%>\%
  group_by(allophone) \%>\%
  slice_sample(n = 5) \%>\%
  ungroup() \%>\%
  # Now collapse distinctions
  mutate(allophone = fct_collapse(allophone, "BIT" = c("BIT", "BIG")),
         environment = ifelse(allophone == "BIT", "elsewhere", allophone))

# Creating new allophones depends on the complexity of the allophone         
darla \%>\%
  code_allophones(.old_col = phoneme, 
                  .new_cols = c("allophone", "environment"), 
                  .fol_seg = fol_seg, 
                  .pre_seg = pre_seg) \%>\%
  # Create voice and voiceless distinctions for MOUTH
  mutate(allophone = case_when(phoneme == "MOUTH" & fol_seg \%in\% c("P", "T", "K", "CH", "F", "TH", "S", "SH") ~ "BOUT",
                               phoneme == "MOUTH" ~ "LOUD",
                               TRUE ~ allophone),
         environment = if_else(allophone == "BOUT",  "prevoiceless", environment)) \%>\%
  # Get a subset for demonstration purposes
  filter(phoneme == "MOUTH") \%>\%
  group_by(allophone) \%>\%
  slice_sample(n = 5) \%>\%
  ungroup()
}
