% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/grapes.R
\name{\%ni\%}
\alias{\%ni\%}
\title{The "Not In" function}
\usage{
x \%ni\% y
}
\arguments{
\item{x}{A vector, presumably a subset of "y"}

\item{y}{A vector}
}
\value{
A list of logicals indicating whether the objects in \code{x} are not
contained in \code{y}.
}
\description{
This returns \code{TRUE} if values are \emph{not} in a list. It's the opposite 
of \code{\%in\%}. This is particularly good when subsetting and you only want
to remove a few things (like diphthongs). You can remove those rather than 
specifying all monophthongs you want to keep.
}
\details{
Note that what this function does can easily be accomplished with \code{!x \%in\% y},
but I like the "not in" aspect. Probably a holdover from my Perl days...

You can also define this function as \code{`\%ni\%` <- Negate(`\%in\%`)} but 
when looking through the documentation on \%in\%, I found that it might be 
better to modify the formal definition there instead.

Credit to \href{https://stackoverflow.com/questions/24660864/declaring-special-infix-functions-in-r-packages}{this Stack Overflow question} for showing how to get this to work in an R package.
}
\examples{
1:10 \%in\% c(1,3,5,9)
1:10 \%ni\% c(1,3,5,9)
}
